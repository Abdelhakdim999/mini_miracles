<?php

namespace eventBundle\Repository;

/**
 * evenementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class evenementRepository extends \Doctrine\ORM\EntityRepository
{

    public function findEvenement($nom){
        $nbr=$this->verifier_nbrinscr();
        $query=$this->getEntityManager()
            ->createQuery("select n from eventBundle:evenement n where n.nom='$nom'and n.dateEvent> CURRENT_Date()
             and nb_places>'$nbr'");
        return $query->getResult();

    }
    function SearchEvent($libelle){
        $query=$this->getEntityManager()->createQuery("select e from eventBundle:evenement e where e.nom LIKE '%$libelle%'
        and
        e.dateEvent> CURRENT_Date() and e.nbPlaces> 0");
        return $query->getResult();

    }
    public function myfindall(){
        $query=$this->getEntityManager()->createQuery(
            "select n from eventBundle:evenement n where  n.dateEvent> CURRENT_Date() and n.nbPlaces> 0
            ORDER BY n.dateEvent DESC"

        );

        return $query->getResult();
    }






    public function verifier_nbrinscr($idevenement){
        $query=$this->getEntityManager()
            ->createQuery("select count(n) from eventBundle:inscription_evenement n where n.id_event= '$idevenement' ");
        return $query->getResult();

    }

    public function find_event_inscr($idev){
        $query=$this->getEntityManager()
            ->createQuery("select n from eventBundle:inscription_evenement n where n.id_event= '$idev' ");
        return $query->getResult();

    }
    public function findEntitiesByString($str){
        return $this->getEntityManager()
            ->createQuery(
                'SELECT p
                FROM eventBundle:evenement p
                WHERE p.nom LIKE :str'
            )
            ->setParameter('str', '%'.$str.'%')
            ->getResult();
    }


}
